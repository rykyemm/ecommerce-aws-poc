{
	"info": {
		"_postman_id": "a5f6e8c7-b0d8-4d11-a6cd-6e542f3bc123",
		"name": "E-Commerce API Tests",
		"description": "Collection de tests pour l'API E-Commerce",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Produits",
			"item": [
				{
					"name": "Récupérer tous les produits",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Statut 200 OK\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Format de réponse valide\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('records');",
									"    pm.expect(jsonData.records).to.be.an('array');",
									"});",
									"",
									"pm.test(\"Contient des produits\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.records.length).to.be.greaterThan(0);",
									"});",
									"",
									"// Sauvegarder le premier ID de produit pour les tests futurs",
									"if (pm.response.json().records.length > 0) {",
									"    pm.environment.set(\"product_id\", pm.response.json().records[0].id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api_url}}/product",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"product"
							]
						}
					},
					"response": []
				},
				{
					"name": "Récupérer un produit par ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Statut 200 OK\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Produit trouvé\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.expect(jsonData).to.have.property('name');",
									"    pm.expect(jsonData).to.have.property('price');",
									"    pm.expect(jsonData.id).to.eql(parseInt(pm.environment.get(\"product_id\")));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api_url}}/product/{{product_id}}",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"product",
								"{{product_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Rechercher des produits",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Statut 200 OK\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Format de réponse valide\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('records');",
									"    pm.expect(jsonData.records).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api_url}}/product/search/phone",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"product",
								"search",
								"phone"
							]
						}
					},
					"response": []
				},
				{
					"name": "Créer un produit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Statut 201 Created\", function() {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Produit créé avec succès\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('message');",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.expect(jsonData.message).to.include('succès');",
									"    ",
									"    // Sauvegarder l'ID du nouveau produit",
									"    pm.environment.set(\"new_product_id\", jsonData.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Produit de test\",\n    \"description\": \"Ceci est un produit créé pour les tests automatisés\",\n    \"price\": 99.99,\n    \"stock_quantity\": 10,\n    \"category_id\": 1\n}"
						},
						"url": {
							"raw": "{{api_url}}/product",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"product"
							]
						}
					},
					"response": []
				},
				{
					"name": "Mettre à jour un produit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Statut 200 OK\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Produit mis à jour avec succès\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('message');",
									"    pm.expect(jsonData.message).to.include('succès');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Produit de test modifié\",\n    \"description\": \"Description mise à jour pour les tests\",\n    \"price\": 89.99,\n    \"stock_quantity\": 15\n}"
						},
						"url": {
							"raw": "{{api_url}}/product/{{new_product_id}}",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"product",
								"{{new_product_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Supprimer un produit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Statut 200 OK\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Produit supprimé avec succès\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('message');",
									"    pm.expect(jsonData.message).to.include('succès');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api_url}}/product/{{new_product_id}}",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"product",
								"{{new_product_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Authentification",
			"item": [
				{
					"name": "Inscription",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Statut 201 Created\", function() {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Utilisateur créé avec succès\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('token');",
									"    pm.expect(jsonData).to.have.property('user');",
									"    pm.expect(jsonData.user).to.have.property('email');",
									"    ",
									"    // Sauvegarder le token et l'email",
									"    pm.environment.set(\"auth_token\", jsonData.token);",
									"    pm.environment.set(\"user_email\", jsonData.user.email);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test{{$timestamp}}@example.com\",\n    \"password\": \"Password123!\",\n    \"first_name\": \"Test\",\n    \"last_name\": \"User\",\n    \"address\": \"123 Test Street\",\n    \"phone\": \"1234567890\"\n}"
						},
						"url": {
							"raw": "{{api_url}}/user/register",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"user",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Connexion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Statut 200 OK\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Connexion réussie\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('token');",
									"    pm.expect(jsonData).to.have.property('user');",
									"    ",
									"    // Sauvegarder le token",
									"    pm.environment.set(\"auth_token\", jsonData.token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{user_email}}\",\n    \"password\": \"Password123!\"\n}"
						},
						"url": {
							"raw": "{{api_url}}/user/login",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "api_url",
			"value": "{{base_url}}/api",
			"type": "string"
		}
	]
} 